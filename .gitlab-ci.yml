# 就是上文说的stages
stages:
  - build_debug # 这里就是一个stage，可以定义多个stage，这个stage就是下面的build_debug

# 构建之前会执行的脚本，这里导入本地的环境变量
before_script:
  - export ANDROID_HOME=/Users/lucas/Library/Android/sdk
  - export PATH=$PATH:${ANDROID_HOME}/tools
  - export PATH=$PATH:${ANDROID_HOME}/platform-tools
  - chmod +x ./gradlew

# 声明一个名叫build_debug的构建任务
build_debug:
  stage: build_debug
  # 构建中，执行一些脚本
  script:
    - ./gradlew --stacktrace assembleDevelopDebug
  # 指定监听哪一个分支或什么时候触发Pipeline
  only:
    - tags #这里tags的作用是当修改gitlab项目tag的时候会触发
    - test # 监听GitLab的这个分支
  #    - master
  # 指定由哪一个runner运行
  tags:
    - dev # 这个dev是上文注册Runner时的tag，和注册时候tag一样的话就会用对应的Runner来执行任务
  # 指定成功后应附加到任务的文件和目录的列表
  artifacts:
    paths:
      - app/build/outputs/

# 构建完成之后执行的脚本
#after_script:
#  - 这里如果是要配合monkey的话，一般在这个地方执行monkey的脚本

